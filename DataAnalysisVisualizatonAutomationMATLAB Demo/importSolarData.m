function [Date1,DayofYear,SolRatio,MaxAirTemp,MinAirTemp,AvgRelHum] = importSolarData(workbookFile,sheetName,startRow,endRow)
%IMPORTFILE Import data from a spreadsheet
%   IMPORTFILE(FILE) reads data from the first worksheet in the Microsoft
%   Excel spreadsheet file named FILE and returns the data as column
%   vectors.
%
%   IMPORTFILE(FILE,SHEET) reads from the specified worksheet.
%
%   IMPORTFILE(FILE,SHEET,STARTROW,ENDROW) reads from the specified
%   worksheet for the specified row interval(s). Specify STARTROW and
%   ENDROW as a pair of scalars or vectors of matching size for
%   dis-contiguous row intervals. To read to the end of the file specify an
%   ENDROW of inf.
%
%	Rows with non-numeric cells are excluded.
%
% Example:
%   importfile('DavisDaily.xlsx','DavisDaily',2,3653);
%
%   See also XLSREAD.

% Auto-generated by MATLAB on 2014/05/23 11:24:39

%% Input handling

% If no sheet is specified, read first sheet
if nargin == 1 || isempty(sheetName)
    sheetName = 1;
end

% If row start and end points are not specified, define defaults
if nargin <= 3
    startRow = 2;
    endRow = 3653;
end

%% Import the data, extracting spreadsheet dates in Excel serial date format
[~, ~, raw1, dates1] = xlsread(workbookFile, sheetName, sprintf('D%d:E%d',startRow(1),endRow(1)),'' , @convertSpreadsheetExcelDates);
[~, ~, raw2, dates2] = xlsread(workbookFile, sheetName, sprintf('H%d:H%d',startRow(1),endRow(1)),'' , @convertSpreadsheetExcelDates);
[~, ~, raw3, dates3] = xlsread(workbookFile, sheetName, sprintf('J%d:K%d',startRow(1),endRow(1)),'' , @convertSpreadsheetExcelDates);
[~, ~, raw4, dates4] = xlsread(workbookFile, sheetName, sprintf('O%d:O%d',startRow(1),endRow(1)),'' , @convertSpreadsheetExcelDates);
raw = [raw1,raw2,raw3,raw4];
dates = [dates1,dates2,dates3,dates4];
for block=2:length(startRow)
    [~, ~, tmpRawBlock1, tmpDateNumBlock1] = xlsread(workbookFile, sheetName, sprintf('D%d:E%d',startRow(block),endRow(block)),'' , @convertSpreadsheetExcelDates);
    [~, ~, tmpRawBlock2, tmpDateNumBlock2] = xlsread(workbookFile, sheetName, sprintf('H%d:H%d',startRow(block),endRow(block)),'' , @convertSpreadsheetExcelDates);
    [~, ~, tmpRawBlock3, tmpDateNumBlock3] = xlsread(workbookFile, sheetName, sprintf('J%d:K%d',startRow(block),endRow(block)),'' , @convertSpreadsheetExcelDates);
    [~, ~, tmpRawBlock4, tmpDateNumBlock4] = xlsread(workbookFile, sheetName, sprintf('O%d:O%d',startRow(block),endRow(block)),'' , @convertSpreadsheetExcelDates);
    raw = [raw;tmpRawBlock1,tmpRawBlock2,tmpRawBlock3,tmpRawBlock4]; %#ok<AGROW>
    dates = [dates;tmpDateNumBlock1,tmpDateNumBlock2,tmpDateNumBlock3,tmpDateNumBlock4]; %#ok<AGROW>
end
raw = raw(:,[2,3,4,5,6]);
dates = dates(:,1);

%% Exclude rows with non-numeric cells
I = ~(all(cellfun(@(x) (isnumeric(x) || islogical(x)) && ~isnan(x),raw),2) & all(cellfun(@isnumeric,dates),2)); % Find rows with non-numeric cells
raw(I,:) = [];
dates(I,:) = [];

%% Create output variable
J = cellfun(@(x) ischar(x), raw);
raw(J) = {NaN};
data = reshape([raw{:}],size(raw));

%% Allocate imported array to column variable names
dates(~cellfun(@(x) isnumeric(x) || islogical(x), dates)) = {NaN};
Date1 = datetime([dates{:,1}].', 'ConvertFrom', 'Excel', 'Format', 'MM/dd/yyyy');
DayofYear = data(:,1);
SolRatio = data(:,2);
MaxAirTemp = data(:,3);
MinAirTemp = data(:,4);
AvgRelHum = data(:,5);

