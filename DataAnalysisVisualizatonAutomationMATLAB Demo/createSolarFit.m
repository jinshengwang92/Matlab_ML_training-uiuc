function [fitresult, gof] = createSolarFit(mydelT, myAvgHum, mySolRatio)
%CREATEFIT(MYDELT,MYAVGHUM,MYSOLRATIO)
%  Create a fit.
%
%  Data for 'SolarFit' fit:
%      X Input : mydelT
%      Y Input : myAvgHum
%      Z Output: mySolRatio
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 10-Jan-2014 16:53:41


%% Fit: 'SolarFit'.
[xData, yData, zData] = prepareSurfaceData( mydelT, myAvgHum, mySolRatio );

% Set up fittype and options.
ft = fittype( 'a*(1+b*RelHum)*(1-exp(-c*delT^n))', 'independent', {'delT', 'RelHum'}, 'dependent', 'SolRatio' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.178607038102871 0.293530594800319 0.0363486058477357 0.913375856139019];

% Fit model to data.
[fitresult, gof] = fit( [xData, yData], zData, ft, opts );

% Plot fit with data.
figure( 'Name', 'SolarFit' );
h = plot( fitresult, [xData, yData], zData );
%legend( h, 'SolarFit', 'mySolRatio vs. mydelT, myAvgHum', 'Location', 'NorthEast' );
% Label axes
xlabel( 'Temperature Change (\circF)' );
ylabel( 'Relative Humidity' );
zlabel( 'Solar Ratio' );
grid on


